#!/usr/bin/env python
# arg1 : posteriors file
# arg2 : arff file

from md5 import md5
def ndhash(ndarray):
    return md5("".join(map(str, ndarray.flatten()))).hexdigest()

from marff import read_arff
import sys
import numpy as np
posteriors, testarff = sys.argv[1:3]

fd = open(posteriors, "r")
nb_err = 0

header, data = read_arff(testarff)
for i, (post, d) in enumerate(zip(fd.readlines(), data)):
    target = d[-1]
    post = post.split(",")
    cl1, cl2 = post
    cl1 = float(cl1)
    cl2 = float(cl2)
    if cl1 > cl2:
        if target == 1:
            sys.stdout.write("%s\n" % (ndhash(np.array(d[0:-1]))),)
            nb_err += 1
    else:
        if target == 0:
            sys.stdout.write("%s\n" % (ndhash(np.array(d[0:-1]))),)
            nb_err += 1

fd.close()
